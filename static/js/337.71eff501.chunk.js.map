{"version":3,"file":"static/js/337.71eff501.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","webpack://react-homework-template/./src/components/MovieReviews/MovieReviews.module.css?a938","components/MovieReviews/MovieReviews.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","constants/index.js","services/fetchApi.js","services/slug.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"MovieCast_castList__xcvag\",\"castItem\":\"MovieCast_castItem__UULM2\",\"itemDescr\":\"MovieCast_itemDescr__cqZ6W\",\"personName\":\"MovieCast_personName__pajaM\",\"character\":\"MovieCast_character__ruC7Q\"};","import React, { useEffect, useState } from \"react\";\nimport { getMovieCast } from \"../../services/fetchApi\";\nimport s from \"./MovieCast.module.css\";\n\nconst MovieCast = ({ movieId }) => {\n  const [cast, setCast] = useState(null);\n\n  const anchor = document.querySelector(\"#cast\");\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { cast } = await getMovieCast(movieId);\n\n      setCast(cast);\n\n      if (anchor) {\n        window.scrollTo({\n          top: anchor.offsetTop,\n          behavior: \"smooth\",\n        });\n      }\n    };\n\n    getCast();\n  }, [movieId, anchor]);\n\n  return (\n    <div>\n      <ul className={s.castList} id=\"cast\">\n        {cast &&\n          cast.map(({ id, profile_path, original_name, character }) => (\n            <li key={id} className={s.castItem}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                    : \"https://pomogaetsrazu.ru/images/offers/2829219234.jpg\"\n                }\n                alt={original_name}\n              />\n              <div className={s.itemDescr}>\n                <p className={s.personName}>{original_name}</p>\n                <p className={s.character}>Character: {character}</p>\n              </div>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewItem\":\"MovieReviews_reviewItem__+z3PF\",\"reviewText\":\"MovieReviews_reviewText__Xo07q\"};","import React, { useEffect, useState } from \"react\";\nimport { getReviews } from \"../../services/fetchApi\";\nimport s from \"./MovieReviews.module.css\";\n\nconst MovieReviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState(null);\n\n  const anchor = document.querySelector(\"#reviews\");\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { results } = await getReviews(movieId);\n\n      setReviews(results);\n\n      if (anchor) {\n        window.scrollTo({\n          top: anchor.offsetTop,\n          behavior: \"smooth\",\n        });\n      }\n    };\n\n    getCast();\n  }, [movieId, anchor]);\n\n  return (\n    <div id=\"reviews\">\n      {reviews && (\n        <ul>\n          {reviews ? (\n            reviews.map(({ id, author, content }) => (\n              <li key={id} className={s.reviewItem}>\n                <h3>Author: {author}</h3>\n                <p className={s.reviewText}>{content}</p>\n              </li>\n            ))\n          ) : (\n            <li>We don't have any reviews for this movie</li>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetialsSection\":\"MovieDetailsPage_movieDetialsSection__WOapk\",\"mainContainer\":\"MovieDetailsPage_mainContainer__VXN49\",\"movieDetails__button\":\"MovieDetailsPage_movieDetails__button__CsT5A\",\"movieCard\":\"MovieDetailsPage_movieCard__BMoxK\",\"posterContainer\":\"MovieDetailsPage_posterContainer__8aKXU\",\"descrContainer\":\"MovieDetailsPage_descrContainer__LaCo4\",\"movieCard__title\":\"MovieDetailsPage_movieCard__title__vIjHH\",\"movieCard__text\":\"MovieDetailsPage_movieCard__text__LO3Io\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__MR4+w\",\"additionalInfo__list\":\"MovieDetailsPage_additionalInfo__list__shBIJ\",\"additionalInfo__item\":\"MovieDetailsPage_additionalInfo__item__jUE-R\",\"additionalInfo__link\":\"MovieDetailsPage_additionalInfo__link__EuDpv\",\"additionalInfo__activeLink\":\"MovieDetailsPage_additionalInfo__activeLink__qpf+1\"};","import React, { useEffect, useState } from \"react\";\nimport {\n  Route,\n  NavLink,\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { getMovieDetails } from \"../../services/fetchApi\";\nimport { getIdFromSlug } from \"../../services/slug\";\nimport MovieCast from \"../../components/MovieCast/MovieCast\";\nimport MovieReviews from \"../../components/MovieReviews/MovieReviews\";\nimport s from \"./MovieDetailsPage.module.css\";\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const { slug } = useParams();\n  const { url } = useRouteMatch();\n\n  const movieId = getIdFromSlug(slug);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const currentMovie = await getMovieDetails(movieId);\n\n      setMovie(currentMovie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    history.push(location?.state?.from?.location ?? \"/movies\");\n  };\n\n  return (\n    <>\n      {movie && (\n        <section className={s.movieDetialsSection}>\n          <div className={s.mainContainer}>\n            <button\n              type=\"button\"\n              onClick={handleGoBack}\n              className={s.movieDetails__button}\n            >\n              {location?.state?.from?.label ?? \"Find another movie\"}\n            </button>\n\n            <div className={s.movieCard}>\n              <div className={s.posterContainer}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                      : \"https://pomogaetsrazu.ru/images/offers/2829219234.jpg\"\n                  }\n                  alt={movie.title}\n                />\n              </div>\n\n              <div className={s.descrContainer}>\n                <h2 className={s.movieCard__title}>\n                  {movie.title} ({movie.release_date.slice(0, 4)})\n                </h2>\n                <p className={s.movieCard__text}>\n                  User score: {movie.vote_average}\n                </p>\n\n                <h3>Overview</h3>\n                <p className={s.movieCard__text}>\n                  {movie.overview ? movie.overview : \"No overwies yet\"}\n                </p>\n\n                <h3>Genres</h3>\n                <p>{movie.genres.map((genre) => genre.name).join(\", \")}</p>\n              </div>\n            </div>\n\n            <div className={s.additionalInfo}>\n              <h3>Additional Information</h3>\n              <ul className={s.additionalInfo__list}>\n                <li className={s.additionalInfo__item}>\n                  <NavLink\n                    className={s.additionalInfo__link}\n                    activeClassName={s.additionalInfo__activeLink}\n                    to={{ pathname: `${url}/cast`, state: location.state }}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className={s.additionalInfo__item}>\n                  <NavLink\n                    className={s.additionalInfo__link}\n                    activeClassName={s.additionalInfo__activeLink}\n                    to={{ pathname: `${url}/reviews`, state: location.state }}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Route path={`${url}/cast`}>\n              <MovieCast movieId={movieId} />\n            </Route>\n\n            <Route path={`${url}/reviews`}>\n              <MovieReviews movieId={movieId} />\n            </Route>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n\n// location?.state?.from?.location\n\n// parentPage={location.state}\n","export const apiKey = \"?api_key=5fa4bb8a58c85ac583b1447954dde7e6\";\n","import axios from \"axios\";\nimport { apiKey } from \"../constants\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day${apiKey}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie${apiKey}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}${apiKey}&language=en-US`;\n\n  const { data: movie } = await axios.get(queryString);\n\n  return movie;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n","import slugify from \"slugify\";\n\nexport const makeSlug = (string) =>\n  slugify(string, {\n    lower: true,\n  });\n\nexport const getIdFromSlug = (slug) => slug.match(/[a-z0-9]+$/)[0];\n"],"names":["movieId","useState","cast","setCast","anchor","document","querySelector","useEffect","getCast","getMovieCast","window","scrollTo","top","offsetTop","behavior","className","s","id","map","profile_path","original_name","character","src","alt","reviews","setReviews","getReviews","results","author","content","movie","setMovie","location","useLocation","history","useHistory","slug","useParams","url","useRouteMatch","getIdFromSlug","getMovie","getMovieDetails","currentMovie","type","onClick","push","state","from","label","poster_path","title","release_date","slice","vote_average","overview","genres","genre","name","join","activeClassName","to","pathname","path","apiKey","axios","fetchTrendingMovies","queryString","movies","data","searchMovies","stringToSearch","makeSlug","string","slugify","lower","match"],"sourceRoot":""}