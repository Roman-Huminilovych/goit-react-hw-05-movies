{"version":3,"file":"static/js/906.c5aa0792.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","constants/index.js","services/fetchApi.js","services/slug.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesPage\":\"MoviesPage_moviesPage__W9QBM\",\"mainContainer\":\"MoviesPage_mainContainer__uDZsK\",\"searchForm\":\"MoviesPage_searchForm__oPV05\",\"searchForm__input\":\"MoviesPage_searchForm__input__Zqk2j\",\"searchForm__button\":\"MoviesPage_searchForm__button__HWDg0\",\"moviesList\":\"MoviesPage_moviesList__RPIho\",\"moviesList__item\":\"MoviesPage_moviesList__item__Ys3bg\",\"moviesList__movieTitle\":\"MoviesPage_moviesList__movieTitle__aJNwU\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\nimport { searchMovies } from \"../../services/fetchApi\";\nimport { makeSlug } from \"../../services/slug\";\nimport s from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n  const [movieToFind, setMovieToFind] = useState(\"\");\n  const [foundMovies, setFoundMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get(\"query\");\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setFoundMovies(results);\n        setMovieToFind(searchString);\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (movieToFind.trim()) {\n      const { results } = await searchMovies(movieToFind);\n\n      setFoundMovies(results);\n      setMovieToFind(\"\");\n\n      if (results.length === 0) {\n        Notiflix.Notify.warning(\n          \"No movies found! Please change your request and try again\"\n        );\n      }\n\n      history.push({\n        ...location,\n        search: `query=${movieToFind}`,\n      });\n    }\n  };\n\n  return (\n    <section className={s.moviesPage}>\n      <div className={s.mainContainer}>\n        <form onSubmit={handleSubmit} className={s.searchForm}>\n          <input\n            type=\"text\"\n            placeholder=\"Find movie\"\n            value={movieToFind}\n            onChange={(e) => setMovieToFind(e.target.value)}\n            className={s.searchForm__input}\n          />\n\n          <button type=\"submit\" className={s.searchForm__button}>\n            Search\n          </button>\n        </form>\n\n        {foundMovies.length > 0 && (\n          <ul className={s.moviesList}>\n            {foundMovies.map(({ id, title, poster_path }) => (\n              <li className={s.moviesList__item} key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${makeSlug(`${title} ${id}`)}`,\n                    state: {\n                      from: {\n                        location,\n                        label: \"Back to Movies\",\n                      },\n                    },\n                  }}\n                >\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                        : \"https://pomogaetsrazu.ru/images/offers/2829219234.jpg\"\n                    }\n                    alt={title}\n                  />\n                  <p className={s.moviesList__movieTitle}>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div></div>\n    </section>\n  );\n};\n\nexport default MoviesPage;\n","export const apiKey = \"?api_key=5fa4bb8a58c85ac583b1447954dde7e6\";\n","import axios from \"axios\";\nimport { apiKey } from \"../constants\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day${apiKey}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie${apiKey}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}${apiKey}&language=en-US`;\n\n  const { data: movie } = await axios.get(queryString);\n\n  return movie;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n","import slugify from \"slugify\";\n\nexport const makeSlug = (string) =>\n  slugify(string, {\n    lower: true,\n  });\n\nexport const getIdFromSlug = (slug) => slug.match(/[a-z0-9]+$/)[0];\n"],"names":["useState","movieToFind","setMovieToFind","foundMovies","setFoundMovies","location","useLocation","history","useHistory","useEffect","searchString","URLSearchParams","search","get","getMovies","searchMovies","results","handleSubmit","e","preventDefault","trim","length","Notiflix","push","className","s","onSubmit","type","placeholder","value","onChange","target","map","id","title","poster_path","to","pathname","makeSlug","state","from","label","src","alt","apiKey","axios","fetchTrendingMovies","queryString","movies","data","stringToSearch","getMovieDetails","movieId","movie","getMovieCast","getReviews","string","slugify","lower","getIdFromSlug","slug","match"],"sourceRoot":""}